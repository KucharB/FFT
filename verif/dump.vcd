$date
	Sun Jan 12 15:28:06 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_axi_lite $end
$var wire 1 ! WRITE_ram $end
$var wire 1 " WREADY $end
$var wire 2 # WBURST [1:0] $end
$var wire 12 $ SAMPLE_INDEX_ram [11:0] $end
$var wire 1 % RVALID $end
$var wire 1 & READ_ram $end
$var wire 32 ' RDATA [31:0] $end
$var wire 2 ( RBURST [1:0] $end
$var wire 16 ) RAM_in_axi [15:0] $end
$var wire 1 * LOADED_DATA $end
$var wire 32 + DATA_FROM_RAM [31:0] $end
$var reg 1 , CALC_END $end
$var reg 1 - RREADY $end
$var reg 12 . SAMP_NUMBER [11:0] $end
$var reg 16 / WDATA [15:0] $end
$var reg 1 0 WRITE_TO_CACHE $end
$var reg 1 1 WVALID $end
$var reg 1 2 clk $end
$var reg 1 3 n_Reset $end
$scope module ram1 $end
$var wire 12 4 READ_ADDRESS [11:0] $end
$var wire 12 5 SEND_ADDR [11:0] $end
$var wire 32 6 SEND_DATA [31:0] $end
$var wire 1 2 clk $end
$var wire 1 7 mode $end
$var wire 1 0 write_to_cache $end
$var wire 1 ! axi_write $end
$var wire 1 & axi_read $end
$var wire 16 8 axi_data_in [15:0] $end
$var wire 12 9 axi_adr_in [11:0] $end
$var reg 16 : READ_DATA [15:0] $end
$var reg 32 ; axi_data_out [31:0] $end
$upscope $end
$scope module slave $end
$var wire 1 - i_ARREADY $end
$var wire 16 < i_AWDATA [15:0] $end
$var wire 1 1 i_AWVALID $end
$var wire 1 , i_CALC_END $end
$var wire 32 = i_DATA_FROM_RAM [31:0] $end
$var wire 12 > i_SAMPLES_NUMBER [11:0] $end
$var wire 1 2 i_clk $end
$var wire 1 3 i_rstn $end
$var wire 1 ? current_state $end
$var parameter 32 @ DATA_WIDTH $end
$var reg 12 A index_cnt [11:0] $end
$var reg 2 B next_state [1:0] $end
$var reg 2 C o_ARBURST [1:0] $end
$var reg 32 D o_ARDATA [31:0] $end
$var reg 1 % o_ARVALID $end
$var reg 2 E o_AWBURST [1:0] $end
$var reg 1 " o_AWREADY $end
$var reg 1 * o_DATA_LOADED $end
$var reg 1 & o_READ_ram $end
$var reg 12 F o_SAMPLE_INDEX_ram [11:0] $end
$var reg 16 G o_SAMPLE_ram [15:0] $end
$var reg 1 ! o_WRITE_ram $end
$var reg 2 H state [1:0] $end
$var reg 1 I cnt_clr $end
$var reg 1 J cnt_en $end
$scope begin p_fsm_comb $end
$upscope $end
$scope begin p_fsm_sync $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 @
$end
#0
$dumpvars
0J
0I
b0 H
bx G
bx F
bx E
bx D
bx C
b0 B
b0 A
0?
b101 >
bx =
bx <
bx ;
bx :
bx 9
bx 8
17
bz 6
bz 5
bz 4
03
12
01
00
bx /
b101 .
0-
0,
bx +
0*
bx )
bx (
bx '
0&
0%
bx $
bx #
1"
0!
$end
#5000
02
#10000
12
#15000
02
#20000
12
13
#25000
02
#30000
b1011111011101111 )
b1011111011101111 8
b1011111011101111 G
b1011111011101111 /
b1011111011101111 <
1J
b0 $
b0 9
b0 F
1!
b10 H
b10 B
1"
12
11
#35000
02
#40000
b1011101010111110 /
b1011101010111110 <
b1011101010111110 )
b1011101010111110 8
b1011101010111110 G
b1 $
b1 9
b1 F
1J
1"
1!
b1 A
12
#45000
02
#50000
b1011101010111010 /
b1011101010111010 <
b1011101010111010 )
b1011101010111010 8
b1011101010111010 G
b10 $
b10 9
b10 F
1J
1"
1!
b10 A
12
#55000
02
#60000
b1010100111000110 /
b1010100111000110 <
b1010100111000110 )
b1010100111000110 8
b1010100111000110 G
b11 $
b11 9
b11 F
1J
1"
1!
b11 A
12
#65000
02
#70000
b1101010101101010 /
b1101010101101010 <
1I
b11 B
1*
b1101010101101010 )
b1101010101101010 8
b1101010101101010 G
b100 $
b100 9
b100 F
0J
1"
1!
b100 A
12
#75000
02
#80000
1-
01
bx )
bx 8
bx G
bx $
bx 9
bx F
0I
0"
0!
0*
1?
b0 A
b11 H
12
#85000
02
#90000
12
#95000
02
#100000
b1 B
1,
12
#105000
02
#110000
1J
b0 $
b0 9
b0 F
1&
1%
b1 H
12
#115000
02
#120000
b1011111011101111 '
b1011111011101111 D
b1 $
b1 9
b1 F
1J
1%
1&
b1011111011101111 +
b1011111011101111 ;
b1011111011101111 =
b1 A
12
#125000
02
#130000
b1011101010111110 '
b1011101010111110 D
b10 $
b10 9
b10 F
1J
1%
1&
b1011101010111110 +
b1011101010111110 ;
b1011101010111110 =
b10 A
12
#135000
02
#140000
b1011101010111010 '
b1011101010111010 D
b11 $
b11 9
b11 F
1J
1%
1&
b1011101010111010 +
b1011101010111010 ;
b1011101010111010 =
b11 A
12
#145000
02
#150000
b1010100111000110 '
b1010100111000110 D
b100 $
b100 9
b100 F
1J
1%
1&
b1010100111000110 +
b1010100111000110 ;
b1010100111000110 =
b100 A
12
#155000
02
#160000
b0 B
1I
b1101010101101010 '
b1101010101101010 D
b101 $
b101 9
b101 F
0J
0%
1&
b1101010101101010 +
b1101010101101010 ;
b1101010101101010 =
b101 A
12
#165000
02
#170000
1"
bx '
bx D
bx $
bx 9
bx F
0I
0&
0?
bx +
bx ;
bx =
b0 A
b0 H
12
#175000
02
#180000
12
#180001
