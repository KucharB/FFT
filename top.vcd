$date
	Tue Dec 17 20:04:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_fft_tb $end
$var wire 1 ! o_AWVALID $end
$var wire 32 " o_AWDATA [31:0] $end
$var wire 2 # o_AWBURST [1:0] $end
$var wire 1 $ o_ARREADY $end
$var wire 2 % o_ARBURST [1:0] $end
$var parameter 32 & DATA_WIDTH $end
$var reg 1 ' MAC_nRADIX $end
$var reg 16 ( i_ARDATA [15:0] $end
$var reg 1 ) i_ARVALID $end
$var reg 1 * i_AWREADY $end
$var reg 12 + i_SAMPLES_NUMBER [11:0] $end
$var reg 1 , i_clk $end
$var reg 1 - i_rstn $end
$scope module dut $end
$var wire 1 ' MAC_nRADIX $end
$var wire 16 . RDATA [15:0] $end
$var wire 1 ) RVALID $end
$var wire 12 / SAMP_NUMBER [11:0] $end
$var wire 1 * WREADY $end
$var wire 1 , clk $end
$var wire 1 - n_Reset $end
$var wire 1 0 ram_to_cache $end
$var wire 1 1 l_nComp $end
$var wire 2 2 fsm_state [1:0] $end
$var wire 1 3 device_clear $end
$var wire 1 4 counter_n_ovf $end
$var wire 1 5 counter_n_en $end
$var wire 1 6 counter_k_en $end
$var wire 1 ! WVALID $end
$var wire 1 7 WRITE_ram $end
$var wire 32 8 WDATA [31:0] $end
$var wire 2 9 WBURST [1:0] $end
$var wire 16 : TW_VAL_REAL [15:0] $end
$var wire 16 ; TW_VAL_IMAG [15:0] $end
$var wire 32 < SEND_DATA [31:0] $end
$var wire 12 = SEND_ADDR [11:0] $end
$var wire 12 > SAMPLE_INDEX_ram [11:0] $end
$var wire 1 $ RREADY $end
$var wire 1 ? READ_ram $end
$var wire 2 @ RBURST [1:0] $end
$var wire 16 A RAM_in_axi [15:0] $end
$var wire 12 B N_INDEX [11:0] $end
$var wire 32 C MUL_REAL_RESULT [31:0] $end
$var wire 32 D MUL_IMAG_RESULT [31:0] $end
$var wire 1 E LOADED_DATA $end
$var wire 32 F DATA_FROM_RAM [31:0] $end
$var wire 1 G CALC_END $end
$var wire 16 H CACHE_DATA_OUT [15:0] $end
$var wire 16 I CACHE_DATA_IN [15:0] $end
$var wire 32 J ACUMULATION_INPUT [31:0] $end
$var parameter 32 K N $end
$scope module acumulation $end
$var wire 1 , clk $end
$var wire 32 L val_a [31:0] $end
$var wire 1 3 nrst $end
$var wire 1 6 ce $end
$var reg 16 M accumulated_val_imag [15:0] $end
$var reg 16 N accumulated_val_real [15:0] $end
$var reg 32 O val_out [31:0] $end
$upscope $end
$scope module c_mem $end
$var wire 1 , clk $end
$var wire 12 P write_adr [11:0] $end
$var wire 1 0 write $end
$var wire 12 Q read_adr [11:0] $end
$var wire 16 R data_in [15:0] $end
$var reg 16 S read_data [15:0] $end
$upscope $end
$scope module finit_state $end
$var wire 1 ' ce $end
$var wire 1 , clk $end
$var wire 1 - nrst $end
$var wire 12 T sample_num [11:0] $end
$var wire 2 U state [1:0] $end
$var wire 1 4 data_to_cache_loaded $end
$var wire 1 E data_loaded $end
$var wire 1 G calc_end $end
$var parameter 2 V CLEAR $end
$var parameter 2 W COMPUTE $end
$var parameter 2 X IDLE $end
$var parameter 2 Y LOAD_TO_CACHE $end
$var reg 1 3 clear $end
$var reg 1 6 count_k_en $end
$var reg 1 5 count_n_en $end
$var reg 1 1 load_nCompute $end
$var reg 1 0 load_to_cache $end
$var reg 2 Z states [1:0] $end
$upscope $end
$scope module k_counter $end
$var wire 1 [ ce $end
$var wire 1 , clk $end
$var wire 12 \ max_val [11:0] $end
$var wire 1 3 nrst $end
$var reg 12 ] coun_val [11:0] $end
$var reg 12 ^ o_data [11:0] $end
$var reg 1 G over $end
$upscope $end
$scope module mul_imag $end
$var wire 16 _ a_val [15:0] $end
$var wire 16 ` b_val [15:0] $end
$var reg 32 a result [31:0] $end
$upscope $end
$scope module mul_real $end
$var wire 16 b a_val [15:0] $end
$var wire 16 c b_val [15:0] $end
$var reg 32 d result [31:0] $end
$upscope $end
$scope module n_counter $end
$var wire 1 5 ce $end
$var wire 1 , clk $end
$var wire 12 e max_val [11:0] $end
$var wire 1 3 nrst $end
$var reg 12 f coun_val [11:0] $end
$var reg 12 g o_data [11:0] $end
$var reg 1 4 over $end
$upscope $end
$scope module ram1 $end
$var wire 12 h READ_ADDRESS [11:0] $end
$var wire 12 i SEND_ADDR [11:0] $end
$var wire 32 j SEND_DATA [31:0] $end
$var wire 1 , clk $end
$var wire 1 1 mode $end
$var wire 1 0 write_to_cache $end
$var wire 1 7 axi_write $end
$var wire 1 ? axi_read $end
$var wire 16 k axi_data_in [15:0] $end
$var wire 12 l axi_adr_in [11:0] $end
$var reg 16 m READ_DATA [15:0] $end
$var reg 32 n axi_data_out [31:0] $end
$upscope $end
$scope module round_imag $end
$var wire 32 o val_in [31:0] $end
$var wire 16 p val_out [15:0] $end
$upscope $end
$scope module round_real $end
$var wire 32 q val_in [31:0] $end
$var wire 16 r val_out [15:0] $end
$upscope $end
$scope module slave $end
$var wire 16 s i_ARDATA [15:0] $end
$var wire 1 ) i_ARVALID $end
$var wire 1 * i_AWREADY $end
$var wire 1 G i_CALC_END $end
$var wire 32 t i_DATA_FROM_RAM [31:0] $end
$var wire 12 u i_SAMPLES_NUMBER [11:0] $end
$var wire 1 , i_clk $end
$var wire 1 - i_rstn $end
$var parameter 32 v DATA_WIDTH $end
$var reg 12 w index_cnt [11:0] $end
$var reg 2 x next_state [1:0] $end
$var reg 2 y o_ARBURST [1:0] $end
$var reg 1 $ o_ARREADY $end
$var reg 2 z o_AWBURST [1:0] $end
$var reg 32 { o_AWDATA [31:0] $end
$var reg 1 ! o_AWVALID $end
$var reg 1 E o_DATA_LOADED $end
$var reg 1 ? o_READ_ram $end
$var reg 12 | o_SAMPLE_INDEX_ram [11:0] $end
$var reg 16 } o_SAMPLE_ram [15:0] $end
$var reg 1 7 o_WRITE_ram $end
$var reg 2 ~ state [1:0] $end
$var reg 1 !" cnt_clr $end
$var reg 1 "" cnt_en $end
$scope begin p_fsm_comb $end
$upscope $end
$scope begin p_fsm_sync $end
$upscope $end
$upscope $end
$scope module tw_gen $end
$var wire 12 #" N [11:0] $end
$var wire 12 $" k_index [11:0] $end
$var wire 12 %" n_index [11:0] $end
$var parameter 32 &" DEPTH $end
$var parameter 32 '" WIDTH $end
$var reg 12 (" addr [11:0] $end
$var reg 32 )" data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 '"
b1000000000000 &"
b100000 v
b1 Y
b0 X
b11 W
b10 V
b10 K
b100000 &
$end
#0
$dumpvars
bx )"
bx ("
bx %"
bx $"
b0 #"
0""
0!"
b0 ~
bx }
bx |
bx {
bx z
bx y
b0 x
b0 w
b0 u
bx t
b0 s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
b0 e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
b0 \
x[
bx Z
bx U
b0 T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx J
bx I
bx H
xG
bx F
0E
bx D
bx C
bx B
bx A
bx @
0?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
07
x6
x5
x4
x3
bx 2
x1
x0
b0 /
b0 .
0-
0,
b0 +
x*
x)
b0 (
1'
bx %
1$
bx #
bx "
0!
$end
#5000
0G
0[
04
00
03
06
05
11
b0 2
b0 U
b0 Z
1$
b1 (
b1 .
b1 s
1,
#10000
1-
0,
#15000
b0 ;
b0 `
b111111111111111 :
b111111111111111 c
b1111111111111110000000000000000 )"
b0 ("
b0 =
b0 ^
b0 i
b0 $"
b0 B
b0 P
b0 Q
b0 g
b0 h
b0 %"
b0 <
b0 O
b0 j
b0 ]
b0 f
b0 M
b0 N
b1 x
1$
b10 (
b10 .
b10 s
1)
b1010 +
b1010 /
b1010 T
b1010 \
b1010 e
b1010 u
b1010 #"
1,
#20000
0,
#25000
1""
b11 A
b11 k
b11 }
b0 >
b0 l
b0 |
17
b1 ~
1$
b11 (
b11 .
b11 s
1,
#30000
0,
#35000
b1 w
b100 A
b100 k
b100 }
b1 >
b1 l
b1 |
1""
1$
17
b100 (
b100 .
b100 s
1,
#40000
0,
#45000
b10 w
b101 A
b101 k
b101 }
b10 >
b10 l
b10 |
1""
1$
17
b101 (
b101 .
b101 s
1,
#50000
0,
#55000
b11 w
b110 A
b110 k
b110 }
b11 >
b11 l
b11 |
1""
1$
17
b110 (
b110 .
b110 s
1,
#60000
0,
#65000
b100 w
b111 A
b111 k
b111 }
b100 >
b100 l
b100 |
1""
1$
17
b111 (
b111 .
b111 s
1,
#70000
0,
#75000
b101 w
b1000 A
b1000 k
b1000 }
b101 >
b101 l
b101 |
1""
1$
17
b1000 (
b1000 .
b1000 s
1,
#80000
0,
#85000
b110 w
b1001 A
b1001 k
b1001 }
b110 >
b110 l
b110 |
1""
1$
17
b1001 (
b1001 .
b1001 s
1,
#90000
0,
#95000
b111 w
b1010 A
b1010 k
b1010 }
b111 >
b111 l
b111 |
1""
1$
17
b1010 (
b1010 .
b1010 s
1,
#100000
0,
#105000
b1000 w
b1011 A
b1011 k
b1011 }
b1000 >
b1000 l
b1000 |
1""
1$
17
b1011 (
b1011 .
b1011 s
1,
#110000
0,
#115000
1!"
b11 x
1E
b1001 w
b1100 A
b1100 k
b1100 }
b1001 >
b1001 l
b1001 |
0""
1$
17
b1100 (
b1100 .
b1100 s
1*
0)
1,
#120000
0,
#125000
1!
b0 w
b11 ~
bx A
bx k
bx }
bx >
bx l
bx |
0!"
0$
07
b1101 (
b1101 .
b1101 s
0E
1,
#130000
0,
#135000
1!
b1110 (
b1110 .
b1110 s
1,
#140000
0,
#145000
1!
b1111 (
b1111 .
b1111 s
1,
#150000
0,
#155000
1!
b10000 (
b10000 .
b10000 s
1,
#160000
0,
#165000
1!
b10001 (
b10001 .
b10001 s
1,
#170000
0,
#175000
1!
b10010 (
b10010 .
b10010 s
1,
#180000
0,
#185000
1!
b10011 (
b10011 .
b10011 s
1,
#190000
0,
#195000
1!
b10100 (
b10100 .
b10100 s
1,
#200000
0,
#205000
1!
b10101 (
b10101 .
b10101 s
1,
#210000
0,
#215000
1!
b10110 (
b10110 .
b10110 s
1,
#220000
0,
#225000
1!
b10111 (
b10111 .
b10111 s
1,
#230000
0,
#235000
1!
b11000 (
b11000 .
b11000 s
1,
#240000
0,
#245000
1!
b11001 (
b11001 .
b11001 s
1,
#250000
0,
#255000
1!
b11010 (
b11010 .
b11010 s
1,
#260000
0,
#265000
1!
b11011 (
b11011 .
b11011 s
1,
#270000
0,
#275000
1!
b11100 (
b11100 .
b11100 s
1,
#280000
0,
#285000
1!
b11101 (
b11101 .
b11101 s
1,
#290000
0,
#295000
1!
b11110 (
b11110 .
b11110 s
1,
#300000
0,
#305000
1!
b11111 (
b11111 .
b11111 s
1,
#310000
0,
#315000
1!
b100000 (
b100000 .
b100000 s
1,
#320000
0,
#325000
1!
b100001 (
b100001 .
b100001 s
1,
#330000
0,
#335000
1!
b100010 (
b100010 .
b100010 s
1,
#340000
0,
#345000
1!
b100011 (
b100011 .
b100011 s
1,
#350000
0,
#355000
1!
b100100 (
b100100 .
b100100 s
1,
#360000
0,
#365000
1!
b100101 (
b100101 .
b100101 s
1,
#370000
0,
#375000
1!
b100110 (
b100110 .
b100110 s
1,
#380000
0,
#385000
1!
b100111 (
b100111 .
b100111 s
1,
#390000
0,
#395000
1!
b101000 (
b101000 .
b101000 s
1,
#400000
0,
#405000
1!
b101001 (
b101001 .
b101001 s
1,
#410000
0,
#415000
1!
b101010 (
b101010 .
b101010 s
1,
#420000
0,
#425000
1!
b101011 (
b101011 .
b101011 s
1,
#430000
0,
#435000
1!
b101100 (
b101100 .
b101100 s
1,
#440000
0,
#445000
1!
b101101 (
b101101 .
b101101 s
1,
#450000
0,
#455000
1!
b101110 (
b101110 .
b101110 s
1,
#460000
0,
#465000
1!
b101111 (
b101111 .
b101111 s
1,
#470000
0,
#475000
1!
b110000 (
b110000 .
b110000 s
1,
#480000
0,
#485000
1!
b110001 (
b110001 .
b110001 s
1,
#490000
0,
#495000
1!
b110010 (
b110010 .
b110010 s
1,
#500000
0,
#505000
1!
b110011 (
b110011 .
b110011 s
1,
#510000
0,
#515000
1!
b110100 (
b110100 .
b110100 s
1,
#520000
0,
#525000
1!
b110101 (
b110101 .
b110101 s
1,
#530000
0,
#535000
1!
b110110 (
b110110 .
b110110 s
1,
#540000
0,
#545000
1!
b110111 (
b110111 .
b110111 s
1,
#550000
0,
#555000
1!
b111000 (
b111000 .
b111000 s
1,
#560000
0,
#565000
1!
b111001 (
b111001 .
b111001 s
1,
#570000
0,
#575000
1!
b111010 (
b111010 .
b111010 s
1,
#580000
0,
#585000
1!
b111011 (
b111011 .
b111011 s
1,
#590000
0,
#595000
1!
b111100 (
b111100 .
b111100 s
1,
#600000
0,
#605000
1!
b111101 (
b111101 .
b111101 s
1,
#610000
0,
#615000
1!
b111110 (
b111110 .
b111110 s
1,
#620000
0,
#625000
1!
b111111 (
b111111 .
b111111 s
1,
#630000
0,
#635000
1!
b1000000 (
b1000000 .
b1000000 s
1,
